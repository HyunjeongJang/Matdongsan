<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="memberMapper">

    <resultMap type="member" id="memberResultSet">
        <result column="MEMBER_NO" property="memberNo"/>
        <result column="PROVIDER" property="provider"/>
        <result column="PROVIDER_ID" property="providerId"/>
        <result column="MEMBER_NAME" property="memberName"/>
        <result column="PROFILE_IMAGE" property="profileImage"/>
        <result column="EMAIL" property="email"/>
        <result column="NICKNAME" property="nickName"/>
        <result column="PHONE" property="phone"/>
        <result column="ADDRESS" property="address"/>
        <result column="STATUS" property="status"/>
        <result column="GRADE" property="grade"/>
        <result column="INTEREST_STATE" property="interestState"/>
        <result column="ACCESS_TOKEN" property="accessToken"/>
        <result column="REFRESH_TOKEN" property="refreshToken"/>
        <result column="BAN_PERIOD" property="banPeriod"/>
    </resultMap>

    <resultMap type="memberInterest" id="interestList">
        <result column="MEMBER_NO" property="memberNo"/>
        <result column="PROVIDER" property="provider"/>
        <result column="PROVIDER_ID" property="providerId"/>
        <result column="NICKNAME" property="nickName"/>
        <result column="ESTATE_NO" property="estateNo"/>
        <result column="BLDG_NM" property="bldgNm"/>
        <result column="ADDRESS" property="address"/>
        <collection resultMap="interestList1" property="interestList"/>
        <collection resultMap="interestList2" property="interestList"/>
    </resultMap>

    <resultMap type="interest" id="interestList1">
        <result column="ESTATE_NO" property="estateNo"/>
    </resultMap>
    <resultMap type="realEstateSell" id="interestList2">
        <result column="ESTATE_NO" property="estateNo"/>
    </resultMap>


    <insert id="insert" parameterType="member">
        INSERT INTO MEMBER
        (MEMBER_NO, PROVIDER, PROVIDER_ID, MEMBER_NAME, PROFILE_IMAGE, EMAIL, NICKNAME, PHONE, ADDRESS, RECENT_ACCESS,
         ACCESS_TOKEN, REFRESH_TOKEN)
        VALUES (SEQ_MEMBER_NO.NEXTVAL, #{provider}, #{providerId}, #{memberName}, #{profileImage}, #{email},
                #{nickName}, #{phone}, #{address}, #{recentAccess}, #{accessToken}, #{refreshToken})
    </insert>

    <select id="selectByMemberNo" resultMap="memberResultSet">
        SELECT *
        FROM MEMBER
        WHERE MEMBER_NO = #{memberNo}
    </select>

    <select id="select" parameterType="Map" resultMap="memberResultSet">
        SELECT *
        FROM MEMBER
        WHERE PROVIDER = #{provider}
          AND PROVIDER_ID = #{providerId}
    </select>


    <select id="loginMember" parameterType="member" resultMap="memberResultSet">
        SELECT MEMBER_NO,
               NICKNAME,
               PROFILE_IMAGE,
               EMAIL,
               GRADE,
               PHONE,
               ADDRESS,
               PROVIDER,
               PROVIDER_ID
        FROM MEMBER
        WHERE MEMBER_NO = #{memberNo}
          AND STATUS = 'Y'
    </select>

    <update id="update" parameterType="member">
        UPDATE MEMBER
        SET MEMBER_NO = #{memberNo},
            NICKNAME  = #{nickName},
            EMAIL     = #{email},
            PHONE     = #{phone},
            ADDRESS   = #{address},
            GRADE     = #{grade}
        WHERE MEMBER_NO = #{memberNo}
    </update>

    <update id="updateToken" parameterType="Map">
        UPDATE MEMBER
        SET ACCESS_TOKEN  = #{accessToken},
            REFRESH_TOKEN = #{refreshToken}
        WHERE MEMBER_NO = #{memberNo}
    </update>


    <update id="updateRecentAccess" parameterType="Map">
        UPDATE MEMBER
        SET RECENT_ACCESS = CURRENT_TIMESTAMP
        WHERE PROVIDER = #{provider}
          AND PROVIDER_ID = #{providerId}
    </update>

    <update id="updateWithLogin" parameterType="member">
        UPDATE MEMBER
        SET
        PROFILE_IMAGE = #{profileImage},
        MEMBER_NAME = #{memberName},
        ACCESS_TOKEN = #{accessToken},
        <if test="refreshToken != null">
            REFRESH_TOKEN = #{refreshToken},
        </if>
        RECENT_ACCESS = CURRENT_TIMESTAMP
        WHERE PROVIDER = #{provider}
        AND PROVIDER_ID = #{providerId}
    </update>

    <update id="updateBanPeriod" parameterType="Map">
        UPDATE MEMBER
        SET BAN_PERIOD = #{banPeriod}
        WHERE MEMBER_NO = #{memberNo}
    </update>

    <select id="getInterestList" resultMap="interestList">
        SELECT M.MEMBER_NO,
               M.PROVIDER,
               M.PROVIDER_ID,
               M.NICKNAME,
               I.ESTATE_NO,
               S.BLDG_NM,
               S.SGG_NM || ' ' || BJDONG_NM || ' ' || BONBEON || '-' || BUBEON as ADDRESS

        FROM MEMBER M
                 LEFT OUTER JOIN INTEREST I
                                 ON M.MEMBER_NO = I.MEMBER_NO
                 JOIN REALESTATE_SELL S
                      ON I.ESTATE_NO = S.ESTATE_NO

        WHERE M.MEMBER_NO = #{memberNo}

        UNION ALL

        SELECT M.MEMBER_NO,
               M.PROVIDER,
               M.PROVIDER_ID,
               M.NICKNAME,
               I.ESTATE_NO,
               R.BLDG_NM,
               R.SGG_NM || ' ' || BJDONG_NM || ' ' || BOBN || '-' || BUBN as ADDRESS

        FROM MEMBER M
                 LEFT OUTER JOIN INTEREST I
                                 ON M.MEMBER_NO = I.MEMBER_NO
                 JOIN REALESTATE_RENT R
                      ON I.ESTATE_NO = R.ESTATE_NO

        WHERE M.MEMBER_NO = #{memberNo}


    </select>

    <resultMap id="allBoardResultSet" type="allBoard">
        <result column="FREE_BNO" property="boardNo"/>
        <result column="BOARD_TITLE" property="boardTitle"/>
        <result column="BOARD_DATE" property="boardDate"/>
        <result column="QNA_BNO" property="qnaNo"/>
        <result column="QNA_TITLE" property="qnaTitle"/>
        <result column="QNA_DATE" property="qnaDate"/>
        <result column="TYPE" property="boardType"/>

    </resultMap>
    <select id="selectAllBoard" resultMap="allBoardResultSet">
        SELECT F.FREE_BNO,
               F.BOARD_TITLE,
               F.BOARD_DATE,
               '자유게시판' AS TYPE
        FROM FREE_BOARD F
                 LEFT JOIN MEMBER M ON M.MEMBER_NO = F.MEMBER_NO
        WHERE M.MEMBER_NO = #{memberNo}

        UNION ALL

        SELECT Q.QNA_BNO,
               Q.QNA_TITLE,
               Q.QNA_DATE,
               '질문게시판' AS TYPE
        FROM QNA_BOARD Q
                 LEFT JOIN MEMBER M ON M.MEMBER_NO = Q.MEMBER_NO
        WHERE M.MEMBER_NO = #{memberNo}
        ORDER BY BOARD_DATE DESC
    </select>

    <select id="selectAllBoardCount" resultType="int">
        SELECT COUNT(*)
        FROM (SELECT FREE_BNO,
                     BOARD_TITLE,
                     BOARD_DATE,
                     'F' AS TYPE
              FROM FREE_BOARD
              WHERE MEMBER_NO = #{memberNo}
              UNION ALL
              SELECT QNA_BNO,
                     QNA_TITLE,
                     QNA_DATE,
                     'Q' AS TYPE
              FROM QNA_BOARD
              WHERE MEMBER_NO = #{memberNo})
    </select>

    <update id="deleteMember" parameterType="long">
        DELETE
        FROM MEMBER
        WHERE MEMBER_NO = #{memberNo}
    </update>

    <delete id="delete" parameterType="Map">
        DELETE
        FROM INTEREST
        WHERE ESTATE_NO = #{estateNo}
          AND MEMBER_NO = #{memberNo}
    </delete>

    <resultMap id="reviewList" type="review">
        <result column="REVIEW_CONTENT" property="reviewContent"/>
        <result column="CREATE_DATE" property="createDate"/>
        <result column="RES_NO" property="resNo"/>
        <result column="RES_NAME" property="resName"/>
        <result column="STAR_RATING" property="starRating"/>
    </resultMap>

    <select id="selectReviewList" resultMap="reviewList">
        SELECT R.REVIEW_CONTENT,
               R.CREATE_DATE,
               R.STAR_RATING,
               RES.RES_NO,
               RES.RES_NAME
        FROM REVIEW R
                 JOIN MEMBER M ON R.MEMBER_NO = M.MEMBER_NO
                 JOIN RESTAURANT RES ON RES.RES_NO = R.RES_NO
        WHERE R.MEMBER_NO = #{memberNo}
        ORDER BY CREATE_DATE DESC
    </select>
    <select id="selectReviewCount" resultType="int">
        SELECT COUNT(*)
        FROM REVIEW
        WHERE MEMBER_NO = #{memberNo}
    </select>


    <resultMap id="reservationList" type="com.project.realestate.dto.ReservationResponse">
        <result column="REV_NO" property="revNo"/>
        <result column="MEMBER_NO" property="memberNo"/>
        <result column="MEMBER_NAME" property="memberName"/>
        <result column="REV_PEOPLE" property="peopleCount"/>
        <result column="PHONE" property="phone"/>
        <result column="EMAIL" property="email"/>
        <result column="REV_ASK" property="requestText"/>
        <result column="REV_TIME" property="revTime"/>
        <result column="REV_DATE" property="revDate"/>
        <result column="REV_STATUS" property="status"/>
        <result column="AGENT_NAME" property="agentName"/>
    </resultMap>

    <select id="selectReservationList" resultMap="reservationList">
        SELECT R.REV_NO,
               R.MEMBER_NO,
               R.MEMBER_NAME,
               R.REV_PEOPLE,
               R.PHONE,
               R.EMAIL,
               R.REV_ASK,
               R.REV_TIME,
               R.REV_DATE,
               R.REV_STATUS,
               RA.AGENT_NAME
        FROM REAL_RESERVATION R
                 LEFT JOIN MEMBER M ON R.MEMBER_NO = M.MEMBER_NO
                 JOIN REALESTATE_AGENT RA ON R.AGENT_NO = RA.AGENT_NO
        WHERE R.MEMBER_NO = #{memberNo}
    </select>

    <select id="selectReservationCount" resultType="int">
        SELECT COUNT(*)
        FROM REAL_RESERVATION
        WHERE MEMBER_NO = #{memberNo}
    </select>

    <update id="changeMemberGrade">
        UPDATE MEMBER
        SET GRADE = #{grade}
        WHERE MEMBER_NO = #{memberNo}
    </update>


    <resultMap id="BrokerResList" type="brokerList">
        <result column="REV_NO" property="revNo"/>
        <result column="MEMBER_NO" property="memberNo"/>
        <result column="MEMBER_NAME" property="memberName"/>
        <result column="REV_PEOPLE" property="revPeople"/>
        <result column="PHONE" property="phone"/>
        <result column="EMAIL" property="email"/>
        <result column="REV_ASK" property="revAsk"/>
        <result column="REV_TIME" property="revTime"/>
        <result column="REV_DATE" property="revDate"/>
        <result column="REV_CREATEDATE" property="revCreateDate"/>
        <result column="REV_STATUS" property="revStatus"/>
        <result column="AGENT_NO" property="agentNo"/>
        <result column="AGENT_NAME" property="agentName"/>
    </resultMap>

    <select id="selectBrokerResList" resultMap="BrokerResList">
        SELECT R.REV_NO,
               R.MEMBER_NO,
               R.MEMBER_NAME,
               REV_PEOPLE,
               REV_TIME,
               REV_DATE,
               REV_CREATEDATE,
               REV_STATUS
        FROM REAL_RESERVATION R
                 LEFT JOIN REALESTATE_AGENT RA on R.AGENT_NO = RA.AGENT_NO
        WHERE RA.MEMBER_NO = #{memberNo}
    </select>


    <select id="nNameCheck" resultType="int">
        SELECT COUNT(*)
        FROM MEMBER
        WHERE NICKNAME = #{ NICKNAME }
    </select>


</mapper>